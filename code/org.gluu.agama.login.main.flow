Flow org.gluu.agama.login.main
     Basepath ""
     Timeout 500 seconds
     Configs conf
Log "@info Start execution of the password validation flow."
//  Create json variable for UI feedback.
uiFeedback = {}
uiFeedback.errorMessage = ""
uiFeedback.infoMessage = ""
// Get an instance of PasswordService Class.
validationService = Call org.gluu.agama.login.NewPasswordService#getInstance conf
// Iterate x times max
Repeat 6 times max
     // Retrieve user credentials from UI.
     credentials = RRF "login-basic.ftlh" uiFeedback
     // If Forget password 
     When credentials.forgetpass is "continue"
          // Forget password start
          Log "@info Forget password portion starting"
          // Trigger sub-routine to re-set password
          passResetResult = Trigger org.gluu.agama.login.reset 
          // If password reset successful 
          When passResetResult.success is true
               // Password Reset Result
               Log "@info Password Reset Result value is %" passResetResult
               // Flow finish successfully
               Finish passResetResult.data.userId
     Otherwise
          // Validate provided user credentials
          uiFeedback.succeed = Call validationService validate credentials.username credentials.password
          // If user credentials is valid, the flow end successfully.
          When uiFeedback.succeed is true
               // add entry in log file for successfull login attempt.
               Log "@info Valid credentials provided"
               // Phone verified attribute check
               phoneVerified = Call validationService isPhoneVerified credentials.username
               When phoneVerified is true
                    // User already have the phone number
                    uiFeedback.infoMessage = "User already have phone number"
                    // "User already have the phone number"
                    Log "@info User already have the phone number"
                    Finish credentials.username
               Otherwise
                    uiFeedback.infoMessage = "User don't have registered mobile number"
                    ValidMobileNum = Repeat 4 times max
                         phoneInput = RRF "InputMobileNumber.ftlh" uiFeedback
                         phone = phoneInput.phoneNumber
                         ValidNumber = Call validationService isPhoneUnique credentials.username phone
                         When ValidNumber is true
                              // sent sms otp
                              smsOtpSend = Call validationService sendOTPCode credentials.username phone
                              // The OTP Code has been send to user.
                              Log "@info OTP generated and send to: " phone
                              otpValidationResult = false
                              uiFeedback.infoMessage = "Otp send to the registered mobile number"
                              maxSMS = Repeat 4 times max
                                   //  Show UI to collect OTP code from user.
                                   otpCreds = RRF "otp.ftlh" uiFeedback
                                   When otpCreds.hasRequestedNewCode is "yes"
                                        // Log new code request
                                        Log "@info User has requested a new code."
                                        // Resend otp
                                        resendHasSucceed = Call validationService sendOTPCode phone credentials.username
                                        When resendHasSucceed is null
                                             Log "@info Fail to resend new code to user. " resendHasSucceed
                                             uiFeedback.errorMessage = "Error occurs while sending new code to you. Please contact site administrator."
                                        Log "@info New OTP code send successfully!" resendHasSucceed
                                        // Provide feedback about the error message to user.
                                        uiFeedback.infoMessage = "A new OTP code has been send to you on your mobile phone."
                                   Otherwise
                                        //  Add log entry with collected code in log file.
                                        Log "@info Information provided by the user is : " otpCreds.code
                                        //  Validate the OTP code provided by the user.
                                        otpValidationResult = Call validationService validateOTPCode phone otpCreds.code
                                        // Add log entry withvalidation result in log file.
                                        Log "@info OTP validation result is:" otpValidationResult
                                        When otpValidationResult is true
                                             Log "@info OTP validated Successfully"
                                             PhonenumberUpdated = Call validationService markPhoneAsVerified credentials.username phone
                                             // "Phone Number updated in user profile"
                                             uiFeedback.infoMessage = "Phone Number updated in user profile"
                                             RRF "acknowledgement.ftlh" uiFeedback
                                             // Password Vealidation completed successfully!
                                             Finish credentials.username
                                        Otherwise
                                             // The maximum number of attempt has been reached.
                                             Log "@info Invalid code provided "
                                             // Provide feedback to user.
                                             uiFeedback.errorMessage = "Invalid code provided."
                              Log "@info OTP verification loop completed"
                              it_otpmax = { success: false, error: "ExceededTheNumberOfAttemptsAllowed" }
                              // SMS OTP error
                              Finish it_otpmax
                         Otherwise
                              // "This phone is already used by another account. Please enter a different one.
                              uiFeedback.errorMessage = "This phone is already used by another account. Please enter a different one."
                              uiFeedback.infoMessage = "Please enter a new number"
                              // "This phone is already used by another account. Please enter a different one.
                              Log "@info This phone is already used by another account. Please enter a different one."
                              InputNewMobileNumber = RRF "InputMobileNumber.ftlh" uiFeedback
                    Log "@info ValidMobileNumber check competed"
          // Invalid credentials provided.
          Log "@error Invalid credentials provided"
          When conf.enableLock is true
               // Lock user account if needed or unlock if the expiration time  is over.
               lockResult = Call validationService lockAccount credentials.username
               Log "@info Account lock result" lockResult
               uiFeedback.lockMessage = lockResult
          // Maximum attempts reached. Password validation failed!
          Log "@info Maximum attempts reached. Password validation failed."
          uiFeedback.errorMessage = "Invalid credentials. Please try again!"
          uiFeedback.uid = credentials.username
// The login flow will end here with failure.
Log "@info The maximum login attempt has been reached!"
// Maximum attempts reached. Password validation failed!
it_gzxxn = {success:false, error: "Password validation failed!"}
Finish it_gzxxn